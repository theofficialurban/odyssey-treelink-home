---
import { Icon } from "astro-icon/components";
import CustomLink from "./CustomLink.astro";
import type { LiveClasses, Platform, Platforms } from "../siteConfig";
import { PLATFORMS, getPlatform } from "../siteConfig";
interface Props {
  classes?: LiveClasses;
  title: string;
  url: string;
  subtitle?: string;
  platform: Platform;
}

const {
  classes = {
    main: `cLink block min-h-[150px] flex-col items-center justify-center rounded-md border border-gray-600 md:transition-all md:duration-100 md:ease-linear md:hover:scale-105`,
    icon: "size-12",
    title: "",
    innerMain: "",
    listItemClass: "",
  },
  title,
  platform: pform,
  subtitle,
  url,
} = Astro.props;
//const pform = getPlatform(platform);
const gFrom = pform.colorScheme.gFrom;
const gTo = pform.colorScheme.gTo;
---

<slot>
  <CustomLink
    {url}
    glassColor={pform.colorScheme.blur}
    className={[classes.main]}
    listItemClass={classes.listItemClass}
  >
    <Icon
      slot="icon"
      name={pform.iconName}
      class:list={[classes.icon]}
      color={pform.colorScheme.icon}
    />

    <Fragment slot={"content"}>
      <div class="w-full items-center justify-center text-center align-middle">
        <span class:list={["gTitle text-2xl font-extrabold", classes.title]}
          >{title}</span
        >
      </div>
    </Fragment>
    <sub slot="subtitle" class="font-mono uppercase">{subtitle ?? ""}</sub>
  </CustomLink>
</slot>

<style define:vars={{ gTo, gFrom }}>
  .gTitle {
    @apply bg-gradient-to-r from-[var(--gFrom)] to-[var(--gTo)] bg-clip-text text-transparent;
  }
</style>
